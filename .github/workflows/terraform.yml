# name: Terraform CI/CD

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     name: Terraform Pipeline
#     runs-on: ubuntu-latest

#     env:
#       TF_WORKING_DIR: "."  # Change this if Terraform files are in a subfolder

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.13.4

#       # ✅ Configure AWS credentials from GitHub Secrets
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1

#       # ✅ Initialize Terraform
#       - name: Terraform Init
#         run: terraform -chdir=${{ env.TF_WORKING_DIR }} init

#       # ✅ Check code formatting
#       - name: Terraform Format
#         run: terraform -chdir=${{ env.TF_WORKING_DIR }} fmt -check

#       # ✅ Validate configuration
#       - name: Terraform Validate
#         run: terraform -chdir=${{ env.TF_WORKING_DIR }} validate

#       # ✅ Generate execution plan
#       - name: Terraform Plan
#         id: plan
#         run: terraform -chdir=${{ env.TF_WORKING_DIR }} plan -out=tfplan

#       # ✅ Apply infrastructure changes
#       - name: Terraform Apply
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: terraform -chdir=${{ env.TF_WORKING_DIR }} apply -auto-approve tfplan
